type User {
  id:           ID!
  first_name:   String!
  last_name:    String!
  email:        String!
  phone_number: String!
  role:         Role!
  status:       UserStatus!
}

input NewUser {
  first_name:   String!
  last_name:    String!
  email:        String!
  phone_number: String!
  password:     String!
  role:         Role!
  status:       UserStatus!
}

input UpdatedUser {
  id:           ID!
  first_name:   String!
  last_name:    String!
  email:        String!
  phone_number: String!
  role:         Role!
  status:       UserStatus!
}

type Query {
  getUser(user_id: ID!): User
  getAllUser(pagingParameters: PagingParameters): [User]!
  searchUser(query: String!, pagingParameters: PagingParameters): [User]!
}

type Mutation {
  createUser(newUser: NewUser!): User
  updateUser(updatedUser: UpdatedUser!): User @requiresRole(requiredRole: ADMINISTRATOR)
  updatePassword(user_id: ID!, current_password: String!, new_password: String!): Boolean
}
